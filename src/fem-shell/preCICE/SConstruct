# Set environment variable LIBMESH_ROOT or execute scons like that: scons LIBMESH_ROOT=$HOME/software/libmesh scons  

import os,sys

vars = Variables(None, ARGUMENTS)
env = Environment(variables = vars, ENV = os.environ)
conf = Configure(env)

# ====== preCICE ======
preciceRoot = os.getenv ('PRECICE_ROOT')
if (preciceRoot == None):
   print 'ERROR: Environment variable PRECICE_ROOT not defined!'
   sys.exit(1)
else:
   print 'Using environment variable PRECICE_ROOT =', preciceRoot

env.Append(CPPPATH = [os.path.join(preciceRoot, 'src')])
env.Append(LIBPATH = [os.path.join(preciceRoot, 'build/last')])
env.Append(CPPDEFINES = ['PRECICE_USE_MPI'])

conf.CheckLib("precice")
conf.CheckLib("python2.7")

# ====== libMesh ======
libmeshRoot = os.getenv('LIBMESH_ROOT')
if (libmeshRoot == None):
   print 'ERROR: Environment variable LIBMESH_ROOT not defined!'
   sys.exit(1)
else:
   print 'Using environment variable LIBMESH_ROOT =', libmeshRoot

env.Append(CPPPATH = [os.path.join(libmeshRoot, 'include'),
                      "/usr/include/vtk-5.8"]) #############################
env.Append(LIBPATH = [os.path.join(libmeshRoot, ".libs")]) #######################

conf.CheckLib("mesh_opt")

# ====== PETSc ======
PETSC_DIR  = env["ENV"]["PETSC_DIR"]
PETSC_ARCH = env["ENV"]["PETSC_ARCH"]

env.Append(CPPPATH = [os.path.join( PETSC_DIR, "include"),
                      os.path.join( PETSC_DIR, PETSC_ARCH, "include")])
env.Append(LIBPATH = [os.path.join( PETSC_DIR, PETSC_ARCH, "lib")])
conf.CheckLib("petsc")



env["CXX"] = 'mpicxx'
env.Append(CCFLAGS = ["-g3", "-O3", "-Wall", "-std=c++11", '-fopenmp', "-lboost_system"])
env.Append(LINKFLAGS = ['-Wl,-rpath,' + os.path.join(libmeshRoot, "lib")])

# ===== boost ======
conf.CheckLib("boost_system")
conf.CheckLib("boost_filesystem")

env = conf.Finish()

env.Program('FluidSolver', ['fluid_solver.cpp']) ###############################
env.Program('FEM-shell-precice', ['fem-shell_precice.cpp'])
